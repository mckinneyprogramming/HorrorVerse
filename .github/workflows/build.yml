name: SonarCloud

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build, Test, and Analyze
    runs-on: windows-latest
    steps:
      # 1️⃣ Checkout code
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # 2️⃣ Setup .NET 10 SDK
      - name: Setup .NET 10
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '10.0.x'

      # 3️⃣ Setup Java for SonarScanner
      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      # 4️⃣ Install SonarScanner globally
      - name: Install SonarScanner
        run: dotnet tool install --global dotnet-sonarscanner
      - name: Add .NET tools to PATH
        run: echo "${{ runner.user }}/.dotnet/tools" >> $GITHUB_PATH

      # 5️⃣ Restore dependencies
      - name: Restore
        run: dotnet restore

      # 6️⃣ Build solution
      - name: Build
        run: dotnet build --no-incremental

      # 7️⃣ Run tests with coverage and SonarCloud analysis
      - name: Test with coverage & SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          # Start SonarCloud analysis
          dotnet sonarscanner begin `
            /k:"mckinneyprogramming_HorrorTracker" `
            /o:"mckinneyprogramming" `
            /d:sonar.host.url="https://sonarcloud.io" `
            /d:sonar.login=$env:SONAR_TOKEN `
            /d:sonar.cs.opencover.reportsPaths="TestResults/**/coverage.cobertura.xml"

          # Run all tests using coverlet collector (cobertura format)
          dotnet test --no-build --collect:"XPlat Code Coverage" --results-directory ./TestResults

          # End SonarCloud analysis
          dotnet sonarscanner end /d:sonar.login=$env:SONAR_TOKEN
